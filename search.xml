<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>链表</title>
    <url>/uncategorized/%E9%93%BE%E8%A1%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1>结构体</h1>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> &#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> data;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    LNode *next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;LNode;</span></pre></td></tr></table></figure>
<h1>初始化链表</h1>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initLink</span> <span class="params">(LNode **head)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    *head = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(*head == <span class="literal">NULL</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"头结点地址分配失败，程序停止！"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    (*head)-&gt;next = <span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h1>释放链表</h1>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">freeList</span> <span class="params">(LNode *head)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    LNode *p;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span>(head!=<span class="literal">NULL</span>) &#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">        p = head;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        head = head-&gt;next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">free</span>(p);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        p=<span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h1>尾插法添加元素</h1>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">append</span> <span class="params">(LNode *head, <span class="keyword">int</span> val)</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    LNode *p = head;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    LNode *pNew = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(pNew==<span class="literal">NULL</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"新节点分配失败，程序终止！\n"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    pNew-&gt;data = val;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    pNew-&gt;next = <span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span>(p-&gt;next!=<span class="literal">NULL</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        p = p-&gt;next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    p-&gt;next = pNew;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    p = pNew;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
